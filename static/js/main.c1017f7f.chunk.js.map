{"version":3,"sources":["api/Common.js","components/Nav.js","pages/Employer-Register.js","components/CategoryCard.js","components/Breadcrumb.js","components/Loading.js","assets/img/img-01.jpg","pages/NotFound.js","components/JobCard_Horizontal.js","pages/UserProfile.js","components/JobCard.js","App.js","api/loginAPI.js","index.js"],"names":["getToken","sessionStorage","getItem","setUserSession","user","setItem","JSON","stringify","removeUserSession","removeItem","BASE_URL","Nav","EmployerRegister","categories","Map","set","Breadcrumb","Loading","style","class","type","color","height","width","NotFound","UserProfile","App","useState","authLoading","setAuthLoading","useEffect","axios","method","url","headers","then","response","data","catch","error","getUser","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qJAQaA,G,UAAW,WACpB,OAAOC,eAAeC,QAAQ,WAGrBC,EAAiB,SAACC,GAC3BH,eAAeI,QAAQ,OAAQC,KAAKC,UAAUH,KAOrCI,EAAoB,WAC7BP,eAAeQ,WAAW,QAC1BR,eAAeQ,WAAW,UAGjBC,EAAW,oC,aCkJTC,I,sCC/IAC,ICzBTC,EAAa,IAAIC,IACvBD,EAAWE,IAAI,aAAc,wCAC7BF,EAAWE,IAAI,SAAU,oCACzBF,EAAWE,IAAI,eAAgB,0CAC/BF,EAAWE,IAAI,WAAY,sCAC3BF,EAAWE,IAAI,gBAAiB,uC,wBC6BjBC,I,iBCtBAC,MAZf,WACI,OACI,8BACI,qBAAKC,MAAO,CAAE,OAAU,SAAxB,SACI,qBAAKC,MAAM,gFAAX,SACI,cAAC,IAAD,CAAcC,KAAM,OAAQC,MAAO,UAAWC,OAAQ,MAAOC,MAAO,eCRzE,ICoBAC,ICdTX,EAAa,IAAIC,IACvBD,EAAWE,IAAI,aAAc,wCAC7BF,EAAWE,IAAI,SAAU,oCACzBF,EAAWE,IAAI,eAAgB,0CAC/BF,EAAWE,IAAI,WAAY,sCAC3BF,EAAWE,IAAI,gBAAiB,uC,yBC6BjBU,IC5BTZ,EAAa,IAAIC,IACvBD,EAAWE,IAAI,aAAc,wCAC7BF,EAAWE,IAAI,SAAU,oCACzBF,EAAWE,IAAI,eAAgB,0CAC/BF,EAAWE,IAAI,WAAY,sCAC3BF,EAAWE,IAAI,gBAAiB,uC,YCiJjBW,MA9Hf,WACE,MAAsCC,oBAAS,GAA/C,mBAAOC,EAAP,KAAoBC,EAApB,KAUA,OARAC,qBAAU,WACH9B,GCiFc,SAAC6B,GACpBE,IAAM,CACJC,OAAQ,MACRC,IAAI,GAAD,OAAKvB,EAAL,sBAA2BV,KAC9BkC,QAAS,CAAC,eAAgB,sBACzBC,MAAK,SAAAC,GACNjC,EAAeiC,EAASC,MACxBR,GAAe,MACdS,OAAM,SAAAC,GACP/B,IACAqB,GAAe,MDxFfW,CAAQX,KAET,IAECD,GAA6B,MAAd5B,IAA2B,cAAC,EAAD,IAG5C,mCACA,uCE/CJyC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.c1017f7f.chunk.js","sourcesContent":["export const getUser = () => {\r\n    const userStr = sessionStorage.getItem('user')\r\n    if (userStr) {\r\n        return JSON.parse(userStr)\r\n    }\r\n    return null\r\n}\r\n\r\nexport const getToken = () => {\r\n    return sessionStorage.getItem('token')\r\n}\r\n\r\nexport const setUserSession = (user) => {\r\n    sessionStorage.setItem('user', JSON.stringify(user))\r\n}\r\n\r\nexport const setTokenSession = (token) => {\r\n    sessionStorage.setItem('token', token)\r\n}\r\n\r\nexport const removeUserSession = () => {\r\n    sessionStorage.removeItem('user')\r\n    sessionStorage.removeItem('token')\r\n}\r\n\r\nexport const BASE_URL = \"http://jobhubb.herokuapp.com/api/\" \r\n// export const BASE_URL = \"http://127.0.0.1:8000/api/\" ","import React from \"react\";\r\nimport { Link, NavLink, useHistory } from \"react-router-dom\";\r\nimport { getUser, removeUserSession } from \"../api/Common\";\r\nimport image from \"../assets/img/default_avatar.png\";\r\n\r\nconst user = [\r\n  { name: `Home`, path: `/` },\r\n  { name: `Jobs`, path: `/jobs` },\r\n  { name: `Top Companies`, path: `/topCompanies` },\r\n  { name: `Blog`, path: `/blog` },\r\n  { name: `About`, path: `/about` }\r\n];\r\nconst admin = [\r\n  { name: `Home`, path: `/` },\r\n  { name: `Dashboard`, path: `/admin` },\r\n  { name: `Users`, path: `/admin/job-seekers` },\r\n  { name: `Companies`, path: `/admin/companies` },\r\n  { name: `Blog`, path: `/admin/blog` },\r\n  { name: `PostItem`, path: `/admin/postItem` },\r\n];\r\nfunction ShowNav(type) {\r\n  let temp;\r\n  if (type == \"user\") {\r\n    temp = user;\r\n  } else {\r\n    temp = admin;\r\n  }\r\n  return (\r\n    <>\r\n      {temp.map((link) => (\r\n        <li>\r\n          <NavLink exact activeStyle={{ color: \"#09dca4\" }} to={link.path}>\r\n            {link.name}\r\n          </NavLink>\r\n        </li>\r\n      ))}\r\n    </>\r\n  );\r\n}\r\n\r\nfunction Nav(props) {\r\n  let temp;\r\n  const type = props.type;\r\n  temp = ShowNav(type);\r\n  const history = useHistory();\r\n  const onLogout = () => {\r\n    removeUserSession();\r\n    history.push(\"/login\");\r\n    window.location.reload();\r\n  };\r\n  return (\r\n    <div>\r\n      <header className=\"header\">\r\n        <nav className=\"navbar navbar-expand-lg header-nav\">\r\n          <div className=\"navbar-header\">\r\n            <a id=\"mobile_btn\" href=\"javascript:void(0);\">\r\n              <span className=\"bar-icon\">\r\n                <span></span>\r\n                <span></span>\r\n                <span></span>\r\n              </span>\r\n            </a>\r\n            <Link to=\"/\" className=\"navbar-brand logo\">\r\n              <img\r\n                src=\"http://localhost:3000/assets/images/logo/logo.png\"\r\n                className=\"img-fluid\"\r\n                alt=\"Logo\"\r\n              />\r\n            </Link>\r\n          </div>\r\n          <div className=\"main-menu-wrapper\">\r\n            <div className=\"menu-header\">\r\n              <Link to=\"/\" className=\"menu-logo\">\r\n                <img\r\n                  src={process.env.PUBLIC_URL + \"assets/images/logo/logo.png\"}\r\n                  className=\"img-fluid\"\r\n                  alt=\"Logo\"\r\n                />\r\n              </Link>\r\n              <a\r\n                id=\"menu_close\"\r\n                className=\"menu-close\"\r\n                href=\"javascript:void(0);\"\r\n              >\r\n                <i className=\"fas fa-times\"></i>\r\n              </a>\r\n            </div>\r\n            <ul className=\"main-nav\">{temp}</ul>\r\n          </div>\r\n          <ul className=\"nav header-navbar-rht\">\r\n            <li className=\"nav-item\">\r\n              {getUser() ? (\r\n                <li class=\"nav-item dropdown has-arrow\">\r\n                  <a\r\n                    href=\"#\"\r\n                    class=\"dropdown-toggle nav-link\"\r\n                    data-toggle=\"dropdown\"\r\n                  >\r\n                    <span class=\"user-img\">\r\n                      <img\r\n                        class=\"rounded-circle\"\r\n                        src={\r\n                          getUser().avatarAddress\r\n                            ? getUser().avatarAddress\r\n                            : image\r\n                        }\r\n                        width=\"31\"\r\n                        alt=\"Ryan Taylor\"\r\n                      />\r\n                      {getUser().name}\r\n                    </span>\r\n                  </a>\r\n                  <div class=\"dropdown-menu\">\r\n                    <div class=\"user-header\">\r\n                      <div class=\"avatar avatar-sm\">\r\n                        <img\r\n                          src={\r\n                            getUser().avatarAddress\r\n                              ? getUser().avatarAddress\r\n                              : image\r\n                          }\r\n                          alt=\"User Image\"\r\n                          class=\"avatar-img rounded-circle\"\r\n                        />\r\n                      </div>\r\n                      <div class=\"user-text\">\r\n                        <h6>{getUser().name}</h6>\r\n                        <p class=\"text-muted mb-0\">{getUser().type}</p>\r\n                      </div>\r\n                    </div>\r\n                    {/* {getUser().type == \"Employee\" ?\r\n                      (<Link to={`/profile/${getUser()._id}`} className=\"dropdown-item\"> Your Profile </Link> &&\r\n                      <Link to=\"/userprofilesetting\" className=\"dropdown-item\"> Update s Profile </Link>):\r\n                      <Link to={`/employerprofile/${getUser()._id}`} className=\"dropdown-item\"> Your Profile </Link> &&\r\n                      <Link to=\"/employerprofilesetting\" className=\"dropdown-item\"> Update sssd Profile </Link>\r\n                    } */}\r\n                    {getUser().type == \"Employee\" &&\r\n                    <div>\r\n                      <Link to={`/profile/${getUser()._id}`} className=\"dropdown-item\"> Your Profile </Link>\r\n                      <Link to=\"/userprofilesetting\" className=\"dropdown-item\"> Update Profile </Link> \r\n                    </div>\r\n                    }\r\n                    {getUser().type == \"Employer\" &&\r\n                    <div>\r\n                      <Link to={`/employerprofile/${getUser()._id}`} className=\"dropdown-item\"> Your Profile </Link>\r\n                      <Link to=\"/employerprofilesetting\" className=\"dropdown-item\"> Update Profile </Link>\r\n                    </div>\r\n                    }\r\n                    {getUser().type == \"Admin\" && <Link to=\"/admin\" className=\"dropdown-item\"> Adminstration </Link>}\r\n                    <button class=\"dropdown-item\" onClick={onLogout}>\r\n                      Logout\r\n                    </button>\r\n                  </div>\r\n                </li>\r\n              ) : (\r\n                <NavLink\r\n                  activeClassName=\"active\"\r\n                  className=\"nav-link header-login\"\r\n                  to=\"/login\"\r\n                >\r\n                  Login/Sign up\r\n                </NavLink>\r\n              )}\r\n            </li>\r\n          </ul>\r\n        </nav>\r\n      </header>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Nav;\r\n","import React from 'react'\r\nimport EmployerRegisterForm from '../components/EmployerRegisterForm'\r\n\r\nfunction EmployerRegister() {\r\n    return (\r\n        <div className=\"content\">\r\n            <div className=\"container-fluid\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-8 offset-md-2\">\r\n                        <div className=\"account-content\">\r\n                            <div className=\"row align-items-center justify-content-center\">\r\n                                <div className=\"col-md-7 col-lg-6 login-left\">\r\n                                    <img\r\n                                        src=\"assets/images/illustration/login-banner.svg\"\r\n                                        className=\"img-fluid\"\r\n                                        alt=\"Doccure Login\"\r\n                                    />\r\n                                </div>    \r\n                                <EmployerRegisterForm/>                          \r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default EmployerRegister\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst categories = new Map();\r\ncategories.set(\"Programmer\", \"assets/img/categories/programmer.png\");\r\ncategories.set(\"Editor\", \"assets/img/categories/editor.png\");\r\ncategories.set(\"Receptionist\", \"assets/img/categories/receptionist.png\");\r\ncategories.set(\"Designer\", \"assets/img/categories/designer.png\");\r\ncategories.set(\"Web developer\", \"assets/img/categories/developer.png\");\r\n\r\nfunction CategoryCard(props) {\r\n  return (\r\n    <div class=\"speicality-item text-center\">\r\n      <div class=\"speicality-img mx-auto\">\r\n        <img\r\n          src={categories.get(props.title)}\r\n          class=\"img-fluid\"\r\n          alt=\"Speciality\"\r\n        />\r\n        <span>\r\n          <i class=\"fa fa-circle\" aria-hidden=\"true\"></i>\r\n        </span>\r\n      </div>\r\n      <p>\r\n      <Link to={`/jobs?keyword=${props.title}`}>{props.title}</Link>\r\n      </p>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CategoryCard;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction Breadcrumb(props) {\r\n  return (\r\n    <div class=\"breadcrumb-bar\">\r\n      <div class=\"container-fluid\">\r\n        <div class=\"row align-items-center\">\r\n          <div class=\"col-md-12 col-12\">\r\n            <nav aria-label=\"breadcrumb\" class=\"page-breadcrumb\">\r\n              <ol class=\"breadcrumb\">\r\n                {props.type == \"admin\" ? (\r\n                  <>\r\n                    <li class=\"breadcrumb-item\">\r\n                      <Link to=\"/admin\">Dashboard</Link>\r\n                    </li>\r\n                  </>\r\n                ) : (\r\n                  <>\r\n                    <li class=\"breadcrumb-item\">\r\n                      <Link to=\"/\">Home</Link>\r\n                    </li>\r\n                  </>\r\n                )}\r\n                <li class=\"breadcrumb-item active\" aria-current=\"page\">\r\n                  {props.title}\r\n                </li>\r\n              </ol>\r\n            </nav>\r\n            <h2 class=\"breadcrumb-title\">{props.title}</h2>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Breadcrumb;\r\n","import React from 'react'\r\nimport ReactLoading from 'react-loading';\r\n\r\nfunction Loading() {\r\n    return (\r\n        <div>\r\n            <div style={{ \"height\": \"100vh\" }}>\r\n                <div class=\"d-flex align-items-center flex-column justify-content-center h-100 text-white\" >\r\n                    <ReactLoading type={\"bars\"} color={'#09dca4'} height={'10%'} width={'10%'} />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Loading\r\n","export default __webpack_public_path__ + \"static/media/img-01.447ffbaf.jpg\";","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nfunction NotFound() {\r\n    return (\r\n        <body class=\"error-page\">\r\n            <div class=\"main-wrapper\">\r\n                \r\n                <div class=\"error-box\">\r\n                    <h1>404</h1>\r\n                    <h3 class=\"h2 mb-3\"><i class=\"fa fa-warning\"></i> Oops! Page not found!</h3>\r\n                    <p class=\"h4 font-weight-normal\">The page you requested was not found.</p>\r\n                    <Link to=\"/\" class=\"btn btn-primary\">Back to Home</Link>\r\n                </div>\r\n            \r\n            </div>\r\n    </body>\r\n    )\r\n}\r\n\r\nexport default NotFound\r\n","import React, { useState, useEffect } from \"react\";\r\nimport ReactStars from \"react-rating-stars-component\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { getUser } from \"../api/Common\";\r\nimport { deleteJob } from \"../api/jobAPI\";\r\n\r\nconst categories = new Map();\r\ncategories.set(\"Programmer\", \"assets/img/categories/programmer.png\");\r\ncategories.set(\"Editor\", \"assets/img/categories/editor.png\");\r\ncategories.set(\"Receptionist\", \"assets/img/categories/receptionist.png\");\r\ncategories.set(\"Designer\", \"assets/img/categories/designer.png\");\r\ncategories.set(\"Web developer\", \"assets/img/categories/developer.png\");\r\n\r\nfunction JobCard_Horizontal(props) {\r\n  return (\r\n    <div class=\"card\">\r\n      <div class=\"card-body\">\r\n        <div class=\"doctor-widget\">\r\n          <div class=\"doc-info-left\">\r\n            <div class=\"doctor-img\">\r\n              <Link to={`/profile/${props.user._id}`}>\r\n                <img\r\n                  src={props.imagesAddress}\r\n                  class=\"img-fluid\"\r\n                  alt=\"Job Image\"\r\n                />\r\n              </Link>\r\n            </div>\r\n            <div class=\"doc-info-cont\">\r\n              <h4 class=\"doc-name\">\r\n                <Link to={`/employerProfile/${props.user._id}`}>{props.user.name}</Link> {/*name employer, company */}\r\n              </h4>\r\n              <p class=\"doc-speciality\">{props.nameJob} - {props.title}</p>\r\n              <h5 class=\"doc-department\">\r\n                <img\r\n                  src={categories.get(props.category)}\r\n                  class=\"img-fluid\"\r\n                  alt=\"\"\r\n                />\r\n                {props.category}\r\n              </h5>\r\n              <div className=\"rating\">\r\n                  <ReactStars\r\n                    count={5}\r\n                    size={24}\r\n                    edit={false}\r\n                    half={true}\r\n                    value={props.user.rate.avg}\r\n                    activeColor=\"#ffd700\"\r\n                  />\r\n                <span className=\"d-inline-block average-rating\">({props.user.rate.count})</span>\r\n              </div>\r\n              <div class=\"clinic-details\">\r\n                <p class=\"doc-location\">\r\n                  <i class=\"fas fa-map-marker-alt\"></i> {props.address.detail}\r\n                </p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div class=\"doc-info-right\">\r\n            <div class=\"clini-infos\">\r\n              <ul>\r\n                <li>\r\n                  <i class=\"far fa-clock\"></i> Deadline {props.duration}\r\n                </li>\r\n                <li>\r\n                  <i class=\"far fa-money-bill-alt\"></i> {props.salary} USD\r\n                </li>\r\n              </ul>\r\n            </div>\r\n            <div class=\"clinic-booking\">\r\n              <Link to={`/jobs/job-details/${props.id}`} class=\"view-pro-btn\">See details</Link>\r\n            </div>     \r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default JobCard_Horizontal;\r\n","import React, { useEffect, useState } from 'react'\r\nimport { useParams } from 'react-router'\r\nimport { getUserById } from '../api/loginAPI'\r\nimport Breadcrumb from '../components/Breadcrumb'\r\nimport EmployeeProfile from '../components/EmployeeProfile'\r\nimport Loading from '../components/Loading'\r\n\r\nfunction UserProfile() {\r\n  const [user, setUser] = useState(null)\r\n  const id = useParams('id')\r\n\r\n  useEffect(() => {\r\n    getUserById(id.id, setUser)\r\n  }, [])\r\n\r\n  if (user) {\r\n    if (user.mobile)\r\n      return (\r\n        <EmployeeProfile user={user} />\r\n      )\r\n    else {\r\n      return (\r\n        <div style={{ \"height\": \"100vh\" }}>\r\n          <Breadcrumb title=\"Employee Profile\" />\r\n          <div class=\"d-flex align-items-center flex-column justify-content-center h-100\" >\r\n            <h1>Sorry, the user have not update their profile</h1>\r\n          </div>\r\n        </div>\r\n      )\r\n    }\r\n  } else {\r\n    return (\r\n      <div>\r\n        <Breadcrumb title=\"Employee Profile\" />\r\n        <Loading />\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default UserProfile\r\n","import React, { useState, useEffect } from \"react\";\r\nimport ReactStars from \"react-rating-stars-component\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { getUser } from \"../api/Common\";\r\nimport { deleteJob, getMyJobs, updateJob } from \"../api/jobAPI\";\r\nimport Modal from 'react-modal';\r\nimport AddJob from \"../pages/AddJob\";\r\nimport InputTag from \"./InputTag\";\r\nimport TextAreaTag from \"./TextAreaTag\";\r\nimport { getProvinces } from \"../api/locationAPI\";\r\nimport Select from 'react-select'\r\n\r\nconst categories = new Map();\r\ncategories.set(\"Programmer\", \"assets/img/categories/programmer.png\");\r\ncategories.set(\"Editor\", \"assets/img/categories/editor.png\");\r\ncategories.set(\"Receptionist\", \"assets/img/categories/receptionist.png\");\r\ncategories.set(\"Designer\", \"assets/img/categories/designer.png\");\r\ncategories.set(\"Web developer\", \"assets/img/categories/developer.png\");\r\n\r\nfunction JobCard(props) {\r\n    const [modalIsOpenEdit, setIsOpenEdit] = useState(false)\r\n    const customStylesEdit = {\r\n      content: {\r\n        height: \"80%\",\r\n        width: \"80%\",\r\n        top: '50%',\r\n        left: '50%',\r\n        right: 'auto',\r\n        bottom: 'auto',\r\n        marginRight: '-50%',\r\n        transform: 'translate(-50%, -50%)',\r\n        overflowY: 'scroll'\r\n      },\r\n    };\r\n    const [modalIsOpenDelete, setIsOpenDelete] = useState(false)\r\n    const customStylesDelete = {\r\n      content: {\r\n        top: '50%',\r\n        left: '50%',\r\n        right: 'auto',\r\n        bottom: 'auto',\r\n        marginRight: '-50%',\r\n        transform: 'translate(-50%, -50%)',\r\n      },\r\n    };\r\n    const [provinceOptions, changeProvinceOptions] = useState([]);\r\n    const [title, setTitle] = useState(null)\r\n    const [nameJob, setNameJob] = useState(null)\r\n    const [description, setDescription] = useState(null)\r\n    const [category, setCategory] = useState(null)\r\n    const [salary, setSalary] = useState(null)\r\n    const [duration, setDuration] = useState(null)\r\n    const [detail, setDetail] = useState(null)\r\n    const [province, setProvince] = useState(null)\r\n\r\n    const changeTitle = (param) => {\r\n        setTitle(param.target.value)\r\n    }\r\n\r\n    const changeDescription = (param) => {\r\n        setDescription(param.target.value)\r\n    }\r\n\r\n    const changeNameJob = (param) => {\r\n        setNameJob(param.target.value)\r\n    }\r\n\r\n    const changeCategory = (param) =>{\r\n        setCategory(param.target.value)\r\n    }\r\n\r\n    const changeSalary = (param) => {\r\n        setSalary(param.target.value)\r\n    }\r\n\r\n    const changeDuration = (param)=>{ \r\n        setDuration(param.target.value)   \r\n    }\r\n\r\n    const changeDetail = (param)=>{ \r\n        setDetail(param.target.value)   \r\n    }\r\n\r\n    const submit = async () => {\r\n        await updateJob(props.id, title, nameJob, description, category, salary, duration, province, detail)\r\n        getMyJobs(props.setJobs, props.user._id);\r\n        setIsOpenEdit(false)\r\n    }\r\n\r\n    useEffect(() => {\r\n        async function fetchProvinces() {\r\n            let response = await getProvinces()\r\n            changeProvinceOptions(response)\r\n        }\r\n        fetchProvinces()\r\n    },[])\r\n  \r\n    return (\r\n        <div class=\"card\">\r\n        <div class=\"card-body\">\r\n            <div class=\"doctor-widget\">\r\n            <div class=\"doc-info-left\">\r\n                <div class=\"doctor-img\">\r\n                <Link to={`/profile/${props.user._id}`}>\r\n                    <img\r\n                    src={props.imagesAddress}\r\n                    class=\"img-fluid\"\r\n                    alt=\"Job Image\"\r\n                    />\r\n                </Link>\r\n                </div>\r\n                <div class=\"doc-info-cont\">\r\n                <h4 class=\"doc-name\">\r\n                    <Link to={`/employerProfile/${props.user._id}`}>{props.user.name}</Link> {/*name employer, company */}\r\n                </h4>\r\n                <p class=\"doc-speciality\">{props.nameJob} - {props.title}</p>\r\n                <h5 class=\"doc-department\">\r\n                    <img\r\n                    src={categories.get(props.category)}\r\n                    class=\"img-fluid\"\r\n                    alt=\"\"\r\n                    />\r\n                    {props.category}\r\n                </h5>\r\n                <div className=\"rating\">\r\n                    <ReactStars\r\n                        count={5}\r\n                        size={24}\r\n                        edit={false}\r\n                        half={true}\r\n                        value={props.user.rate.avg}\r\n                        activeColor=\"#ffd700\"\r\n                    />\r\n                    {/* <span className=\"d-inline-block average-rating\">({props.user.rate.count})</span> */}\r\n                </div>\r\n                <div class=\"clini-infos\">\r\n                <ul className=\"d-flex flex-column\">\r\n                    <li>\r\n                    <i class=\"far fa-clock\"></i> Deadline {props.duration}\r\n                    </li>\r\n                    <li>\r\n                    <i class=\"far fa-money-bill-alt\"></i> {props.salary} USD\r\n                    </li>\r\n                </ul>\r\n                </div>\r\n                <div class=\"clinic-details\">\r\n                    <p class=\"doc-location\">\r\n                    <i class=\"fas fa-map-marker-alt\"></i> {props.address.detail}\r\n                    </p>\r\n                </div>\r\n                </div>\r\n            </div>\r\n            <div class=\"doc-info-right\">\r\n                {/* <div class=\"clini-infos\">\r\n                <ul>\r\n                    <li>\r\n                    <i class=\"far fa-clock\"></i> Deadline {props.duration}\r\n                    </li>\r\n                    <li>\r\n                    <i class=\"far fa-money-bill-alt\"></i> {props.salary} USD\r\n                    </li>\r\n                </ul>\r\n                </div> */}\r\n                <div class=\"clinic-booking\">\r\n                <Link to={`/jobs/job-details/${props.id}`} class=\"view-pro-btn\">See details</Link>\r\n                </div>\r\n                {getUser() && getUser()._id == props.user._id && <div ><div class=\"clinic-booking-red\">\r\n                <a class=\"view-pro-btn-red\" onClick={() => setIsOpenDelete(true)} >Delete</a>\r\n                </div><div class=\"clinic-booking-green\">\r\n                <a class=\"view-pro-btn-green\" onClick={() => {\r\n                    setTitle(props.title)\r\n                    setCategory(props.category)\r\n                    setDetail(props.address.detail)\r\n                    setDescription(props.description)\r\n                    setProvince(props.address.province)\r\n                    setDuration(props.duration)\r\n                    setNameJob(props.nameJob)\r\n                    setSalary(props.salary)\r\n                    setIsOpenEdit(true)\r\n                }} >Edit</a>\r\n                </div></div>}\r\n                <Modal\r\n                    isOpen={modalIsOpenDelete}\r\n                    style={customStylesDelete}\r\n                    onRequestClose={() => setIsOpenDelete(false)}\r\n                >\r\n                    <h1>Are you sure ?</h1>\r\n                    <div class=\"clinic-booking-red\">\r\n                    <a class=\"view-pro-btn-red\" onClick={() => deleteJob(props.setJobs, props.id)} >Delete</a>\r\n                    </div>\r\n                    <div class=\"clinic-booking-green\">\r\n                    <a class=\"view-pro-btn-green\" onClick={() => setIsOpenDelete(false)} >Cancel</a>\r\n                    </div>\r\n                </Modal>\r\n                <Modal\r\n                    isOpen={modalIsOpenEdit}\r\n                    style={customStylesEdit}\r\n                    onRequestClose={() => setIsOpenEdit(false)}\r\n                >\r\n                    <div class=\"content\">\r\n                        <div class=\"container-fluid\">\r\n                            <div class=\"row\">\r\n                            <div class=\"col-md-12 col-lg-10 col-xl-11 m-auto\">\r\n                                <div class=\"card\">\r\n                                <div class=\"card-body\">\r\n                                    <div class=\"row form-row\">\r\n                                        <InputTag defaultValue={title} type='text' title=\"Title\" placeholder=\"Title\" onChange={changeTitle} />\r\n                                        <div class=\"col-12 col-md-6\">\r\n                                        <div class=\"form-group\">\r\n                                            <label>Types of Career</label>\r\n                                            <select class=\"form-control select\" onChange={changeCategory}>\r\n                                            <option>Select</option>\r\n                                            <option>Programmer</option>\r\n                                            <option>Designer</option>\r\n                                            <option>Editor</option>\r\n                                            <option>Web developer</option>\r\n                                            <option>Receptionist</option>\r\n                                            </select>\r\n                                        </div>\r\n                                        </div>\r\n                                        <InputTag defaultValue={detail} type='text' title=\"Detail location\" placeholder=\"Detail location\" onChange={changeDetail}/>\r\n                                        <div class=\"form-group\">\r\n                                            <label>Province</label>\r\n                                            <Select placeholder=\"Province\" options={provinceOptions} />\r\n                                        </div>\r\n                                        <InputTag defaultValue={nameJob} type='text' title=\"Carrier\" placeholder=\"Input the name of career!\" onChange={changeNameJob}/>\r\n                                        <InputTag defaultValue={duration} type='date' title=\"Duration\"  onChange={changeDuration}/>\r\n                                        <InputTag defaultValue={salary} type='number' title=\"Salary (USD)\" onChange={changeSalary}/>\r\n                                    </div>\r\n                                    <div class=\"row form-row\">\r\n                                        <TextAreaTag\r\n                                            defaultValue={description}\r\n                                            title=\"Short Description\"\r\n                                            rows=\"5\"\r\n                                            placeholder=\"Write short description of the blog here!\"\r\n                                            onChange={changeDescription}\r\n                                        />\r\n                                    </div>\r\n\r\n                                    <div class=\"submit-section\">\r\n                                        <button class=\"btn btn-primary submit-btn\" onClick={submit}> \r\n                                        Update\r\n                                        </button>\r\n                                    </div>\r\n                                </div>\r\n                                </div>\r\n                            </div>\r\n                            </div>\r\n                        </div>\r\n                        </div>\r\n                </Modal>\r\n            </div>\r\n            </div>\r\n        </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default JobCard;\r\n","import Nav from \"./components/Nav\";\r\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\r\nimport Login from \"./pages/Login\";\r\nimport Register from \"./pages/Register\";\r\nimport Footer from \"./components/Footer\";\r\nimport EmployerRegister from \"./pages/Employer-Register\";\r\nimport Home from \"./pages/Home\";\r\nimport Blog from \"./pages/Blog\";\r\nimport NotFound from \"./pages/NotFound\";\r\nimport BlogDetail from \"./pages/BlogDetail\";\r\nimport Jobs from \"./pages/Jobs\";\r\nimport ForgotPassword from \"./pages/ForgotPassword\";\r\nimport JobDetails from \"./pages/JobDetails\";\r\nimport UserProfileSetting from \"./pages/UserProfileSetting\";\r\nimport TopCompanies from \"./pages/TopCompanies\";\r\nimport About from \"./pages/About\";\r\nimport AddBlog from \"./pages/AddBlog\";\r\nimport AddJob from \"./pages/AddJob\";\r\nimport AdminCompanies from \"./pages/AdminCompanies\";\r\nimport AdminJobSeekers from \"./pages/AdminJobSeekers\";\r\nimport { getToken } from \"./api/Common\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { getUser } from \"./api/loginAPI\";\r\nimport Loading from \"./components/Loading\";\r\nimport UserProfile from \"./pages/UserProfile\";\r\nimport EmployerProfile from \"./components/EmployerProfile\";\r\nimport EmployerProfileSetting from \"./pages/EmployerProfileSetting\";\r\nimport AdminDashboard from \"./pages/AdminDashboard\";\r\nimport AdminBlog from \"./pages/AdminBlog\";\r\nimport { RouteWithNav } from \"./components/RouteWithNav\";\r\nimport { EmployerRoute } from \"./components/EmployerRoute\";\r\nimport { EmployeeRoute } from \"./components/EmployeeRoute\";\r\nimport { PrivateRoute } from \"./components/PrivateRoute\";\r\nimport { AdminRoute } from \"./components/AdminRoute\";\r\nimport AdminPostItem from \"./pages/AdminPostItem\";\r\n\r\nfunction App() {\r\n  const [authLoading, setAuthLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    if (!getToken) {\r\n      return;\r\n    } else {\r\n      getUser(setAuthLoading);\r\n    }\r\n  }, []);\r\n\r\n  if (authLoading && getToken() != null) return <Loading />;\r\n\r\n  return (\r\n    <>\r\n    <h1>ok</h1>\r\n      {/* <Router>\r\n        <RouteWithNav type=\"user\" exact path=\"/\" component={Home} />\r\n        <RouteWithNav type=\"user\" exact path=\"/jobs\" component={Jobs} />\r\n        <RouteWithNav\r\n          type=\"user\"\r\n          exact\r\n          path=\"/jobs/job-details/:id\"\r\n          component={JobDetails}\r\n        />\r\n        <EmployerRoute\r\n          type=\"user\"\r\n          exact\r\n          path=\"/jobs/add-job\"\r\n          component={AddJob}\r\n        />\r\n        <RouteWithNav\r\n          type=\"user\"\r\n          exact\r\n          path=\"/topcompanies\"\r\n          component={TopCompanies}\r\n        />\r\n        <RouteWithNav type=\"user\" exact path=\"/blog\" component={Blog} />\r\n        <RouteWithNav\r\n          type=\"user\"\r\n          exact\r\n          path=\"/blog/detail/:id\"\r\n          component={BlogDetail}\r\n        />\r\n        <PrivateRoute\r\n          type=\"user\"\r\n          exact\r\n          path=\"/blog/add-blog\"\r\n          component={AddBlog}\r\n        />\r\n        <RouteWithNav type=\"user\" exact path=\"/about\" component={About} />\r\n        <RouteWithNav\r\n          type=\"user\"\r\n          exact\r\n          path=\"/employer-register\"\r\n          component={EmployerRegister}\r\n        />\r\n        <RouteWithNav type=\"user\" exact path=\"/login\" component={Login} />\r\n        <RouteWithNav\r\n          type=\"user\"\r\n          exact\r\n          path=\"/forgot\"\r\n          component={ForgotPassword}\r\n        />\r\n        <RouteWithNav type=\"user\" exact path=\"/register\" component={Register} />\r\n        <RouteWithNav\r\n          type=\"user\"\r\n          exact\r\n          path=\"/employerProfile/:id\"\r\n          component={EmployerProfile}\r\n        />\r\n        <EmployerRoute\r\n          type=\"user\"\r\n          exact\r\n          path=\"/employerprofilesetting\"\r\n          component={EmployerProfileSetting}\r\n        />\r\n        <EmployeeRoute\r\n          type=\"user\"\r\n          exact\r\n          path=\"/userprofilesetting\"\r\n          component={UserProfileSetting}\r\n        />\r\n        <RouteWithNav\r\n          type=\"user\"\r\n          exact\r\n          path=\"/profile/:id\"\r\n          component={UserProfile}\r\n        />\r\n\r\n        \r\n        <AdminRoute\r\n          type=\"admin\"\r\n          path=\"/admin\"\r\n          exact\r\n          component={AdminDashboard}\r\n        />\r\n        <AdminRoute\r\n          type=\"admin\"\r\n          path=\"/admin/companies\"\r\n          exact\r\n          component={AdminCompanies}\r\n        />\r\n        <AdminRoute\r\n          type=\"admin\"\r\n          path=\"/admin/job-seekers\"\r\n          exact\r\n          component={AdminJobSeekers}\r\n        />\r\n        <AdminRoute\r\n          type=\"admin\"\r\n          path=\"/admin/blog\"\r\n          exact\r\n          component={AdminBlog}\r\n        />\r\n        <AdminRoute\r\n          type=\"admin\"\r\n          path=\"/admin/postItem\"\r\n          exact\r\n          component={AdminPostItem}\r\n        />\r\n      </Router> */}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import axios from \"axios\";\r\nimport { BASE_URL, getToken, removeUserSession, setTokenSession, setUserSession } from \"./Common\";\r\n\r\nexport const login = (email, password, setError, history) => {\r\n    axios({\r\n        method: 'post',\r\n        url: `${BASE_URL}login`,\r\n        headers: {'Content-Type': 'application/json'},\r\n        data: {\r\n            email: email,\r\n            password: password\r\n        }\r\n    }).then(response => {\r\n        setTokenSession(response.data.token)\r\n        setUserSession(response.data.user)\r\n        history.push(\"/\")\r\n    }).catch(error => {\r\n        setError(error.response.data.message)\r\n    })\r\n}\r\n\r\nexport const employeeRegister = (email, username, password, repassword, setEmailError, setUsernameError, setPasswordError, setRepasswordError, history) => {\r\n    axios({\r\n        method: 'post',\r\n        url:  `${BASE_URL}register`,\r\n        headers: {'Content-Type': 'application/json'},\r\n        withCredentials: true,\r\n        data: {\r\n            email: email,\r\n            name: username,\r\n            password: password,\r\n            repassword: repassword,\r\n            type: \"Employee\"\r\n        }\r\n    }).then(response => {\r\n        history.push(\"/login\")\r\n    }).catch(error => {\r\n        if (error.response.status === 409 || error.response.status === 400) {\r\n            try {\r\n                setEmailError(error.response.data[0].email)\r\n                setUsernameError(error.response.data[0].name)\r\n                setPasswordError(error.response.data[0].password)\r\n                setRepasswordError(error.response.data[0].repassword)\r\n            } catch ($e) {\r\n                setEmailError(\"Email is already use\")\r\n            }\r\n        }\r\n    })\r\n}\r\n\r\nexport const employerRegister = (email, username, password, repassword, setEmailError, setUsernameError, setPasswordError, setRepasswordError, history) => {\r\n    axios({\r\n        method: 'post',\r\n        url:  `${BASE_URL}register`,\r\n        headers: {'Content-Type': 'application/json'},\r\n        withCredentials: true,\r\n        data: {\r\n            email: email,\r\n            name: username,\r\n            password: password,\r\n            repassword: repassword,\r\n            type: \"Employer\"\r\n        }\r\n    }).then(response => {\r\n        history.push(\"/login\")\r\n    }).catch(error => {\r\n        if (error.response.status === 409 || error.response.status === 400) {\r\n            try {\r\n                setEmailError(error.response.data[0].email)\r\n                setUsernameError(error.response.data[0].name)\r\n                setPasswordError(error.response.data[0].password)\r\n                setRepasswordError(error.response.data[0].repassword)\r\n            } catch ($e) {\r\n                setEmailError(\"Email is already use\")\r\n            }\r\n        }\r\n    })\r\n}\r\n\r\nexport const loginWithGG = (idToken, setError, history) => {\r\n    axios({\r\n        method: 'post',\r\n        url: `${BASE_URL}login/google`,\r\n        headers: {'Content-Type': 'application/json'},\r\n        withCredentials: true,\r\n        data: {\r\n            id_token: idToken,\r\n        }\r\n    }).then(response => {\r\n        setUserSession(response.data['user'])\r\n        setTokenSession(response.data['token'])\r\n        history.push('/')\r\n        // window.location.reload()\r\n    }).catch(error => {\r\n        if (error.response.status === 401 || error.response.status === 400) {\r\n            setError(error.response.data.message)\r\n        }\r\n    })\r\n}\r\n\r\nexport const registerWithGG = (idToken, setError, history, type) => {\r\n    axios({\r\n        method: 'post',\r\n        url: `${BASE_URL}register/google/${type}`,\r\n        headers: {'Content-Type': 'application/json'},\r\n        withCredentials: true,\r\n        data: {\r\n            id_token: idToken,\r\n        }\r\n    }).then(response => {\r\n        setUserSession(response.data['user'])\r\n        setTokenSession(response.data['token'])\r\n        history.push('/')\r\n        // window.location.reload()\r\n    }).catch(error => {\r\n        if (error.response.status === 401 || error.response.status === 400) {\r\n            setError(error.response.data.message)\r\n        }\r\n    })\r\n}\r\n\r\nexport const getUser = (setAuthLoading) => {\r\n    axios({\r\n      method: 'get',\r\n      url: `${BASE_URL}user?token=${getToken()}`,\r\n      headers: {'Content-Type': 'application/json'},\r\n    }).then(response => {\r\n      setUserSession(response.data)\r\n      setAuthLoading(false)\r\n    }).catch(error => {\r\n      removeUserSession() \r\n      setAuthLoading(false)\r\n    });\r\n}\r\n\r\nexport const getUserById = (id, setUser) => {\r\n    axios({\r\n        method: 'get',\r\n        url: `${BASE_URL}user/${id}`,\r\n        headers: {'Content-Type': 'application/json'},\r\n      }).then(response => {\r\n        setUser(response.data)\r\n      })\r\n}\r\n\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);"],"sourceRoot":""}